services:
  my-earth:
   image: kennykarnama/earth-server:latest
   deploy:
     resources:
       limits:
         memory: 125M
   env_file: ./envs/earth.env
   ports:
     - "8080:8080"
   depends_on:
    migrator:
      condition: service_completed_successfully
    rcli:
      condition: service_completed_successfully
  migrator:
   image: kennykarnama/earth-migrator:latest
   deploy:
     resources:
       limits:
         memory: 125M
   entrypoint: 
    - /migrate
    - -verbose
    - -path
    - ./
    - -database
    - "postgres://postgres:password@host.docker.internal:5432/mvp?sslmode=disable&x-migrations-table=schema_migrations_my_earth"
    - up
   depends_on:
    postgres:
      condition: service_healthy
  postgres:
    image: postgres:12.19
    deploy:
      resources:
        limits:
          memory: 125M
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST: postgres
      PGDATA: /var/lib/pg_data
    volumes:
      - ./db/postgres/init:/docker-entrypoint-initdb.d
      - ./.volumes/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  jenkins:
    image: jenkins/jenkins:lts
    restart: always
    privileged: true
    user: root
    ports:
      - 8081:8080
      - 50000:50000
    container_name: jenkins
    volumes:
      - ./jenkins/conf:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
  redis:
   image: redis/redis-stack:latest
   restart: always
   ports:
     - "6379:6379"
   volumes:
     - ./.volumes/redis:/data
   environment:
    - "6379:6379"
  rcli:
   image: redis:latest
   links:
    - redis
   command: >
     sh -c 'redis-cli -h redis FT.CREATE locations:points:q:matches:idx ON HASH PREFIX 1 "locations:points:data:" SCHEMA ref_id TEXT name TEXT lat NUMERIC lon NUMERIC'